name: Build and Release
  
on:
  pull_request:
    branches:
      - main
    types:
      - closed

env:
  SOLUTION_NAME: AVnetCore
  PROJECT_NAME: UXAV.AVnet.Core
  CONFIG: Release
  
jobs:
  build:
    if: startsWith(github.head_ref, 'release/')
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      - name: Get version
        shell: powershell
        run: |
          $version = ./.github/scripts/GetVersionFromAssemblyInfo.ps1 -Path ${{env.PROJECT_NAME}}/Properties/AssemblyInfo.cs
          Write-Output "Version is: $version"
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Setup MsBuild
        uses: microsoft/setup-msbuild@v1

      - name: Setup NuGet.exe
        uses: NuGet/setup-nuget@v1.0.5

      - name: Add Nuget API Key for nuget.org
        run: nuget setapikey ${{ secrets.NUGET_UXAV_API_KEY }}

      - name: Nuget Add Source
        run: nuget sources Add -Name "uxav" -Source https://nuget.pkg.github.com/uxav/index.json -username uxav -password ${{ secrets.GITHUB_TOKEN }} -StorePasswordInClearText

      - name: Restore Nuget Packages
        run: nuget restore ${{env.SOLUTION_NAME}}.sln

      - name: Build
        run: msbuild ${{env.SOLUTION_NAME}}.sln /p:Configuration=${{env.CONFIG}}

      - name: Pack Nuget
        run: nuget pack ${{env.PROJECT_NAME}}/${{env.PROJECT_NAME}}.csproj -Properties Configuration=${{env.CONFIG}}

      - name: Push generated package to nuget.org
        run: nuget push *.nupkg -source https://api.nuget.org/v3/index.json

      - name: Push generated package to GitHub registry
        run: nuget push *.nupkg -source "uxav"

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: false