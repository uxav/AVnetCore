name: Build and Package

on:
  release:
    types:
      - published
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Setup MsBuild
        uses: microsoft/setup-msbuild@v1

      - name: Setup NuGet.exe
        uses: NuGet/setup-nuget@v1.0.5

      - name: Get Version Number
        shell: powershell
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}
        #run: Write-Output "::set-env name=VERSION::$($Env:TAG_NAME)"
        run: echo "VERSION=${{ env.TAG_NAME }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Update AssemblyInfo.cs
        shell: powershell
        run: |
          Write-Output "Version is ${{ env.VERSION }}"
          ./.github/scripts/UpdateAssemblyVersion.ps1 $env:VERSION

      - name: Nuget Add Source
        run: nuget sources Add -Name "uxav" -Source https://nuget.pkg.github.com/uxav/index.json -username uxav -password ${{ secrets.GITHUB_TOKEN }} -StorePasswordInClearText

      - name: Restore Nuget Packages
        run: nuget restore AVnetCore.sln

      - name: Build
        run: msbuild AVnetCore.sln /p:Configuration=Release

      # Get version number of the new dll file
      - name: Set Version Number
        shell: powershell
        run: |
          $version = ./.github/scripts/GenerateVersionNumber.ps1 -Path UXAV.AVnetCore/bin/Release/UXAV.AVnetCore.dll
          Write-Output "PS returned version: $version"
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Pack Nuget
        run: nuget pack UXAV.AVnetCore/UXAV.AVnetCore.csproj -Version ${{ env.VERSION }}

      - name: Push generated package to GitHub registry
        run: nuget push *.nupkg -source "uxav"